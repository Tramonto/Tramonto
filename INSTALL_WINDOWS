# Tramonto: A molecular theory code for structured and uniform fluids
#                 Copyright (2006) Sandia Corporation
#
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2.1
# of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

               How to Build Tramonto 5.0 on a Windows platform.

Note:

    When accessing these instructions from the website, it is a good idea
    to verify that you have the version of the instructions that corresponds
    to your version of Tramonto.  The correct version of the instructions can
    always be found in the README file in the top level directory of a Tramonto
    tarball, or a checked out copy of the Tramonto source code repository.


Building Trilinos and Tramonto on Windows Using Visual Studio

    Beginning with Tramonto 4.0, it is possible to build Tramonto on Windows
    using Microsoft Visual Studio.  The below instructions assume some
    familiarity with Visual Studio.  The Windows build process is not as
    polished as the process for Linux or Mac.  Feedback for building on
    Windows, including improvements or additions for the information below
    can be sent to tramonto-help@software.sandia.gov.

    1.  Install CMake, CLAPACK (or other BLAS & LAPACK implementations), and
        MPICH2 (or another MPI implementation)

      CMake: http://www.cmake.org/cmake/resources/software.html

        Download the latest 32-bit Windows installer (even if using a 64-bit
        machine.  Follow the instructions for the self-extracting installer.

      CLAPACK: http://www.netlib.org/clapack

        Download the latest Visual Studio prebuilt zip file.  Extract the
        contents of the zip file and note the directory where CLAPACK was
        extracted.  Alternatively, use the CMake-aware version and build
        (and optionally install) CLAPACK through visual studio.

      MPICH2: http://www.mcs.anl.gov/research/projects/mpich2/downloads/index.php?s=downloads

        Download the latest Windows installer from the above website.  Follow
        the instructions for the self-extracting installer.

    2.  Build Trilinos

        Open the CMake GUI, select Trilinos source and build trees.  Configure
        once.

        Set the following variables (Note that safety and clarity were the
        primary considerations for these instructions, not efficiency):

        TPL_ENABLE_MPI -> ON
        Trilinos_ENABLE_ALL_PACKAGES -> Leave box unchecked
        Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES -> Uncheck box
        Trilinos_ENABLE_Amesos -> ON
        Trilinos_ENABLE_AztecOO -> ON
        Trilinos_ENABLE_Triutils -> ON
        Trilinos_ENABLE_Ifpack -> ON
        Trilinos_ENABLE_EpetraExt -> ON
        Trilinos_ENABLE_Epetra -> ON
        Trilinos_ENABLE_ML -> ON
        Trilinos_ENABLE_NOX -> ON
        Trilinos_ENABLE_Teuchos -> ON
        TPL_ENABLE_BLAS -> ON
        TPL_ENABLE_LAPACK -> ON
        CMAKE_INSTALL_PREFIX -> Set to Trilinos installation path

        Configure again, switch to "Advanced View"

        MPI_BASE_DIR -> Set to top level of MPI installation 
            (ex C:/Program Files/MPICH2)
        TPL_BLAS_LIBRARIES -> Set to find BLAS 
            (ex (this is all one line) - C:/Program Files/CLAPACK 3.2.1/lib/
             blas.lib;C:/Program Files/CLAPACK 3.2.1/lib/libf2c.lib )

        configure again

        TPL_LAPACK_LIBRARIES -> Set to find LAPACK
            (ex C:/Program Files/CLAPACK 3.2.1/lib/lapack.lib )

        configure again
        configure again
        generate

        Open the 'Trilinos.snl' file created during the generation process
        from the 'File' menu in Visual Studio.  Right click on Solution
        'Trilinos' and click 'Build Solution'.

    3.  Build Tramonto

        Next, open the CMake GUI again.  Select Tramonto source and build trees. 
        Configure once.

        Trilinos_DIR -> delete the pre-filled value (if applicable)
        TRILINOS_PATH -> Set to the same value used for CMAKE_INSTALL_PREFIX
        for Trilinos.

        configure again
        generate

        Open the 'Tramonto.snl' file created during the generation process from
        the 'File' menu in Visual Studio.  Right click on Solution 'Tramonto'
        and click 'Build Solution'.

    Notes for Windows build: 

        - These instructions were created using Microsoft Visual Studio 2008.

        - Depending on the version of Trilinos used, the ML build may fail with
          an error indicating that 'unistd.h' cannot be found.  Remove the
          reference to this file from 'ml_utils.h' and build again.

        - If the Tramonto build fails with an error indicating that LAPACK or
          BLAS cannot be found, do the following inside Visual Studio:

            Right-click the dft_exec target -> properties
            Under the C/C++ tab, add to the additional include directories the
            proper directories for the lapack and blas header files.

            Under the Linker tab, add to the additional library directories the
            proper directories for the lapack and blas library files.

            Under Linker->Input, add lapack.lib, blas.lib, and (if using
            clapack) libf2c.lib to the additional dependencies list.

